<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CleverHire</title>
    <link rel="stylesheet" href="\TESTS\Logical Reasoning\Logical Reasoning.css">
    <!-- <link rel="stylesheet" href="Logical Reasoning.css"> -->
    <link href='https://fonts.googleapis.com/css?family=Poppins' rel='stylesheet'>
    <script src="https://kit.fontawesome.com/48f7b1ac70.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <div class="cleverhire">
        <p><a href="/index.html">CleverHire</a></p>
    </div>

<!-- NAVIGATION -->
    <nav>
        <div class="list">
            <a href="">Student: <%= student.name %></a>
            <!-- <a href="">Home</a> -->
            <!-- <a href="">About US</a> -->
            <!-- <a href="">Listed Jobs</a> -->
            <!-- <a href="">Contact</a> -->
        </div>
        <div class="soc-icon">
            <a href="/index.html"><i class="fa-brands fa-linkedin"></i></a>
            <a href=""><i class="fa-brands fa-facebook"></i></a>
            <a href=""><i class="fa-brands fa-x-twitter"></i></a>
            <a href=""><i class="fa-brands fa-instagram"></i></a>
        </div>
    </nav>
    <div class="main-body">
        <!-- LEFT SECTION OF PAGE  -->
        <section class="lmenu">
            <div class="dp">
                <!-- <i class="fa-solid fa-user-graduate"></i> -->
                <img src="<%= locals.profile %>" alt="dp">
            </div>
            <div class="lmenu-items-con">
                <!-- <div class="lmenu-items-icon">
                    <i class="fa-solid fa-chart-line"></i>
                     <i class="fa-solid fa-chart-line"></i>
                    <i class="fa-solid fa-book-open-reader"></i>
                    <i class="fa-solid fa-people-group"></i>

                </div> -->
                <div class="lmenu-items">
                    <li><a class="d" href="/student/dashboard">Dashboard</a></li>
                    <li><a class="ei" href="/student/editinfo">Edit Info</a></li>
                    <li><a class="anj" href="/student/applynewjob">Apply New Job</a></li>
                    <li><a class="aj" href="/student/appliedjobs">Applied Jobs</a></li>
                    <li><a class="mt" href="/student/mocktest">Mock Test</a></li>
                    <li><a class="mi" href="/student/mockinterview">Mock Interview</a></li>
                    <li><a class="cv" href="/student/resume">Create Resume</a></li>
                    <li><a class="l" href="/LOGOUT">Logout</a></li>
                </div>
            </div>
        </section>
        <!-- CENTRE SECTION OF PAGE -->
        <div class="blur-overlay"></div>
        <section class="right-box">
                <div class="examLayout">
                    <div class="currentQn">
    
                        <div class="leftLayer">
                            <div class="time-qn">
                                <div class="currentQnNumber" >
                                    <i class="fa-solid fa-question"></i>
                                    <h1 id="currentQuestionNumber">1</h1>
                                </div>
                                <div class="time">
                                    <i class="fa-regular fa-clock"></i>
                                    <div class="timeRemaining" >
                                        <div class="text-countdown" id="countdown">GO</div>
                                    </div>
                                </div>
                            </div>
                                
                           
                        </div>
                        <div class="middleLayer" id="middleLayer">
                            <div class="qnLayer">
                                <h4 id="questionText"></h4>
                            </div>
                            <div class="optionLayer">
                                <button id="option1">Option 1</button>
                                <button id="option2">Option 2</button>
                                <button id="option3">Option 3</button>
                                <button id="option4">Option 4</button>
                            </div>
                        </div>
                    </div>
    
                    <div class="buttonSection">
                        <div class="buttons">
    
                            <div class="prevQn">
                                <button id="prevButton" class="disabled" onclick="prevQuestion()">PREVIOUS</button>
                            </div>
                            <div class="nextQn">
                                <button id="nextButton" >NEXT</button>
                            </div>
                            <div class="endExm">
                                <button id="endButton">END EXAM</button>
                            </div>
                        </div>
                    </div>
                </div>
        </section>
        <div id="infoPopup" style="display: none;">
            <p class="closeButton"><b>X</b></p>
            <h2>TEST ENDED</h2>
            <div class="infoFetchContainer">
                <div class="row">
                    <div class="label">
                        <h6>Your Score</h6>
                    </div>
                    <div class="value">
                        <h6 id="currentScoreBox">5</h6>
                    </div>
                </div>
                <div class="row">
                    <div class="label">
                        <h6>No. questions attended</h6>
                    </div>
                    <div class="value">
                        <h6 id="attendedQuestionsBox"></h6>
                    </div>
                </div>
                <div class="row">
                    <div class="label">
                        <h6>No. of correct answers</h6>
                    </div>
                    <div class="value">
                        <h6 id="correctAnswersBox"></h6>
                    </div>
                </div>
                <div class="row">
                    <div class="label">
                        <h6>No. of wrong answers</h6>
                    </div>
                    <div class="value">
                        <h6 id="wrongAnswersBox"></h6>
                    </div>
                </div>
            </div>
        </div>
        <div id="popupWrapper"></div>
    </div>
    <script>
        // QUESTIONS AS ARRAY OF OBJECTS
        const questions = [
  {
    "question": "Complete the series: 2, 5, 10, 17, 26, ___",
    "options": ["A) 37", "B) 38", "C) 39", "D) 40"],
    "correctOption": 0
  },
  {
    "question": "If all Zips are Zaps, and some Zaps are Zops, then:",
    "options": ["A) All Zips are Zops", "B) All Zips are Zops, but not all Zops are Zips", "C) Some Zips are Zops", "D) None of the above"],
    "correctOption": 2
  },
  {
    "question": "What comes next in the sequence: 1, 4, 9, 16, ___",
    "options": ["A) 20", "B) 24", "C) 25", "D) 30"],
    "correctOption": 2
  },
  {
    "question": "If A is B, B is C, and C is D, then A is ___",
    "options": ["A) A", "B) B", "C) C", "D) D"],
    "correctOption": 3
  },
  {
    "question": "What is the next number in the sequence: 3, 6, 12, 24, ___",
    "options": ["A) 36", "B) 48", "C) 50", "D) 52"],
    "correctOption": 1
  },
  {
    "question": "If all Bloops are Razzies, and some Razzies are Lazzies, then:",
    "options": ["A) All Bloops are Lazzies", "B) All Bloops are Lazzies, but not all Lazzies are Bloops", "C) Some Bloops are Lazzies", "D) None of the above"],
    "correctOption": 2
  },
  {
    "question": "What is the missing number in the sequence: 5, 10, 20, 40, ___",
    "options": ["A) 70", "B) 80", "C) 90", "D) 100"],
    "correctOption": 2
  },
  {
    "question": "If some Crups are Stups, and all Stups are Glips, then:",
    "options": ["A) Some Crups are Glips", "B) All Crups are Glips", "C) Some Glips are Crups", "D) None of the above"],
    "correctOption": 0
  },
  {
    "question": "What is the next number in the sequence: 1, 3, 6, 10, ___",
    "options": ["A) 12", "B) 13", "C) 15", "D) 16"],
    "correctOption": 2
  },
  {
    "question": "If all Zops are Lops, and no Lops are Rips, then:",
    "options": ["A) Some Zops are Rips", "B) No Zops are Rips", "C) Some Zops are not Rips", "D) All of the above"],
    "correctOption": 1
  },
  {
    "question": "What is the missing number in the sequence: 2, 5, 11, 23, ___",
    "options": ["A) 35", "B) 45", "C) 47", "D) 48"],
    "correctOption": 2
  },
  {
    "question": "If some Bloops are Glips, and all Glips are Stips, then:",
    "options": ["A) Some Bloops are Stips", "B) All Bloops are Stips", "C) Some Stips are Bloops", "D) None of the above"],
    "correctOption": 0
  },
  {
    "question": "What is the next number in the sequence: 2, 4, 8, 16, ___",
    "options": ["A) 24", "B) 32", "C) 36", "D) 64"],
    "correctOption": 1
  },
  {
    "question": "If all Crups are Grups, and no Grups are Plups, then:",
    "options": ["A) Some Crups are Plups", "B) No Crups are Plups", "C) Some Crups are not Plups", "D) All of the above"],
    "correctOption": 0
  },
  {
    "question": "What is the missing number in the sequence: 3, 7, 14, 22, ___",
    "options": ["A) 30", "B) 31", "C) 34", "D) 38"],
    "correctOption": 3
  },
  {
    "question": "If some Plips are Grups, and all Grups are Stips, then:",
    "options": ["A) Some Plips are Stips", "B) All Plips are Stips", "C) Some Stips are Plips", "D) None of the above"],
    "correctOption": 0
  },
  {
    "question": "What is the next number in the sequence: 1, 2, 6, 24, ___",
    "options": ["A) 100", "B) 120", "C) 144", "D) 168"],
    "correctOption": 2
  },
  {
    "question": "If all Grops are Frops, and some Frops are Strops, then:",
    "options": ["A) Some Grops are Strops", "B) All Grops are Strops", "C) Some Strops are Grops", "D) None of the above"],
    "correctOption": 0
  },
  {
    "question": "What is the missing number in the sequence: 4, 12, 28, 60, ___",
    "options": ["A) 100", "B) 124", "C) 126", "D) 132"],
    "correctOption": 2
  },
  {
    "question": "If all Stips are Rips, and some Rips are Pips, then:",
    "options": ["A) Some Stips are Pips", "B) No Stips are Pips", "C) Some Stips are not Pips", "D) All of the above"],
    "correctOption": 0
  },
  {
    "question": "What is the next number in the sequence: 3, 7, 13, 21, ___",
    "options": ["A) 28", "B) 31", "C) 25", "D) 29"],
    "correctOption": 0
  }
];
       // Function to display a question and options
        function displayQuestion(question) {
            document.getElementById("questionText").textContent = question.question;
            for (let i = 0; i < question.options.length; i++) {
                document.getElementById(`option${i + 1}`).textContent = question.options[i];
            }
        }

        // SELECT 10 RANDOM QUESTIONS
        questions.sort(() => Math.random() - 0.5);
        const selectedQuestions = questions.slice(0, 10);

        // Track the current question index
        let currentIndex = 0;
        let currentScore=0;
        let qnAttended=0;
        let rightAnswers=0;
        let wrongAnswers=0;
        function checkAnswer(questionIndex, selectedOptionIndex) {
            if(currentIndex<10){
                if (selectedOptionIndex === questions[questionIndex].correctOption) {
                    // alert("Correct!");
                    currentScore++;
                    rightAnswers++;

                } else {
                    wrongAnswers++;
                    // alert("Incorrect. The correct answer is: " + questions[questionIndex].options[questions[questionIndex].correctOption]);
                }
                    currentIndex++;
                    if(currentIndex<10){
                        document.getElementById("currentQuestionNumber").textContent=currentIndex+1;
                    }
                    qnAttended++;
                    displayQuestion(selectedQuestions[currentIndex]);   
                    updateButtons();
            }
        }

        //CHECKING CLICKED OPTION IS CORRECT OR NOT
        document.getElementById("option1").addEventListener("click", function() {
            checkAnswer(0, 0);
        });
        document.getElementById("option2").addEventListener("click", function() {
            checkAnswer(0, 1);
        });
        document.getElementById("option3").addEventListener("click", function() {
            checkAnswer(0, 2);
        });
        document.getElementById("option4").addEventListener("click", function() {
            checkAnswer(0, 3);
        });
       
        // COUNTDOWN SECTION 
        let timeInSeconds = 10*60;
        // let timeInSeconds = 10;
        function updateCountdown() {
          const minutes = Math.floor(timeInSeconds / 60);
          const seconds = timeInSeconds % 60;
          document.getElementById('countdown').textContent = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
          timeInSeconds--;
      
          if (timeInSeconds < 0) {
            showResult();
            testScore();
          }

        //   TO SHOW RESULTS AFTER FINAL QUESTION 
          if(currentIndex==10){
                showResult();
                testScore();
                console.log(currentIndex);
          }
        }

        // TO END EXAM BY CLICKING END  BUTTON
        document.getElementById("endButton").addEventListener("click", function() {
            showResult();
            testScore();
        });


        function testScore(){
            const testType = "Logical Reasoning";
            score = document.getElementById('correctAnswersBox').textContent
            console.log(score)
            const payload = {
                type: testType,
                score: score
            };
            fetch('/submit-score', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(payload)
            })
            .then(response => {
                if (response.ok) {
                    console.log('Score submitted successfully.');
                    // Handle success if needed
                } else {
                    console.error('Failed to submit score.');
                    // Handle error if needed
                }
            })
            .catch(error => {
                console.error('Error submitting score:', error);
                // Handle error if needed
            });
        }

        // TO SHOW END RESULT 
        function showResult(){
            clearInterval(interval);
            document.getElementById('countdown').textContent = '0:00';
            const infoPopupDiv = document.getElementById("infoPopup");
            const currentScoreBox=document.getElementById("currentScoreBox");
            const attendedQuestionsBox=document.getElementById("attendedQuestionsBox");
            const correctAnswersBox=document.getElementById("correctAnswersBox");
            const wrongAnswersBox=document.getElementById("wrongAnswersBox");
            infoPopupDiv.style.display = "block"; // Change display from none to block
            popupWrapper.style.display = "block";
            currentScoreBox.textContent=currentScore+'/'+10;
            attendedQuestionsBox.textContent=qnAttended;
            correctAnswersBox.textContent=rightAnswers;
            wrongAnswersBox.textContent=wrongAnswers;
            // endExam();
        }
        const interval = setInterval(updateCountdown, 1000);

        // TO SHOW DASHBOARD PAGE AFTER ENDING EXAM
        const closeButton = document.querySelector('.closeButton');
        closeButton.addEventListener('click', endExam);

        function endExam() {
            window.location.href = "/student/dashboard";
            // setTimeout(() => {
            //      // Replace with your results page URL
            // }, 5000); // Delay in milliseconds ( 5second here)
        }


        // Function to update button states
        function updateButtons() {
        const prevButton = document.getElementById("prevButton");
        const nextButton = document.getElementById("nextButton");
        prevButton.disabled = currentIndex === 0;
        nextButton.disabled = currentIndex === selectedQuestions.length - 1;
        }

        // Event listeners for next and previous buttons
        const nextButton = document.getElementById("nextButton");
        const prevButton = document.getElementById("prevButton");

        nextButton.addEventListener("click", () => {
        currentIndex++;
        document.getElementById("currentQuestionNumber").textContent=currentIndex+1;
        displayQuestion(selectedQuestions[currentIndex]);
        updateButtons();
    });
    
    prevButton.addEventListener("click", () => {
        currentIndex--;
        document.getElementById("currentQuestionNumber").textContent=currentIndex+1;
        displayQuestion(selectedQuestions[currentIndex]);
        updateButtons();
        });
        // Initially display the first question
        displayQuestion(selectedQuestions[currentIndex]);
        updateButtons();

     </script>
    
</body>
</html>